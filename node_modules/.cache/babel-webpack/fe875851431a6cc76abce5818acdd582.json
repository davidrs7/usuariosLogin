{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ParamsService = /*#__PURE__*/(() => {\n  class ParamsService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl + 'ParamList/';\n    }\n\n    docTypeEndpoint() {\n      return this.http.get(this.baseUrl + 'DocType');\n    }\n\n    cityEndpoint() {\n      return this.http.get(this.baseUrl + 'City');\n    }\n\n    maritalStatusEndpoint() {\n      return this.http.get(this.baseUrl + 'MaritalStatus');\n    }\n\n    housingTypeEndpoint() {\n      return this.http.get(this.baseUrl + 'PrmHousingType');\n    }\n\n    educationalLevelEndpoint() {\n      return this.http.get(this.baseUrl + 'EducationalLevel');\n    }\n\n    employeeStatusEndpoint() {\n      return this.http.get(this.baseUrl + 'EmployeeStatus');\n    }\n\n    contractTypeEndpoint() {\n      return this.http.get(this.baseUrl + 'ContractType');\n    }\n\n    bankingEntityEndpoint() {\n      return this.http.get(this.baseUrl + 'BankingEntity');\n    }\n\n    transportationEndpoint() {\n      return this.http.get(this.baseUrl + 'Transportation');\n    }\n\n    vacantStatusEndpoint() {\n      return this.http.get(this.baseUrl + 'VacantStatus');\n    }\n\n    postulateFindOutEndpoint() {\n      return this.http.get(this.baseUrl + 'PostulateFindOut');\n    }\n\n    jobSkillsEndpoint() {\n      return this.http.get(this.baseUrl + 'JobSkills');\n    }\n\n    departmentEndpoint() {\n      return this.http.get(this.baseUrl + 'Department');\n    }\n\n    jobEndpoint() {\n      return this.http.get(this.baseUrl + 'Job');\n    }\n\n    paramsDefaultEndpoint(endpoint) {\n      switch (endpoint) {\n        case 'docType':\n          return this.docTypeEndpoint();\n\n        case 'city':\n          return this.cityEndpoint();\n\n        case 'maritalStatus':\n          return this.maritalStatusEndpoint();\n\n        case 'housingType':\n          return this.housingTypeEndpoint();\n\n        case 'educationalLevel':\n          return this.educationalLevelEndpoint();\n\n        case 'contractType':\n          return this.contractTypeEndpoint();\n\n        case 'bankingEntity':\n          return this.bankingEntityEndpoint();\n\n        case 'transportation':\n          return this.transportationEndpoint();\n\n        case 'vacantStatus':\n          return this.vacantStatusEndpoint();\n\n        case 'postulateFindOut':\n          return this.postulateFindOutEndpoint();\n\n        case 'jobSkills':\n          return this.jobSkillsEndpoint();\n\n        case 'department':\n          return this.departmentEndpoint();\n\n        case 'job':\n          return this.jobEndpoint();\n\n        default:\n          return this.employeeStatusEndpoint();\n      }\n    }\n\n    optionListFromParams(availableOnly, sortByTitle) {\n      var options = [{\n        value: 'docType',\n        available: true,\n        title: 'Tipo de documento'\n      }, {\n        value: 'city',\n        available: true,\n        title: 'Ciudad'\n      }, {\n        value: 'maritalStatus',\n        available: true,\n        title: 'Estado civil'\n      }, {\n        value: 'housingType',\n        available: true,\n        title: 'Tipo de vivienda'\n      }, {\n        value: 'educationalLevel',\n        available: true,\n        title: 'Nivel educativo'\n      }, {\n        value: 'employeeStatus',\n        available: false,\n        title: 'Estado del empleado'\n      }, {\n        value: 'contractType',\n        available: true,\n        title: 'Tipo de contrato'\n      }, {\n        value: 'bankingEntity',\n        available: true,\n        title: 'Entidad bancaria'\n      }, {\n        value: 'transportation',\n        available: true,\n        title: 'Tipo de trasporte'\n      }, {\n        value: 'vacantStatus',\n        available: false,\n        title: 'Estado de vacante'\n      }, {\n        value: 'postulateFindOut',\n        available: true,\n        title: 'Encontrado a través de...'\n      }, {\n        value: 'jobSkills',\n        available: true,\n        title: 'Habilidades'\n      }, {\n        value: 'department',\n        available: true,\n        title: 'Departamentos'\n      }, {\n        value: 'job',\n        available: true,\n        title: 'Cargos'\n      }];\n      if (sortByTitle) options.sort((a, b) => a.title > b.title ? 1 : -1);\n      if (availableOnly) options = options.filter(option => option.available);\n      return options;\n    }\n\n  }\n\n  ParamsService.ɵfac = function ParamsService_Factory(t) {\n    return new (t || ParamsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ParamsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ParamsService,\n    factory: ParamsService.ɵfac,\n    providedIn: 'root'\n  });\n  return ParamsService;\n})();","map":null,"metadata":{},"sourceType":"module"}