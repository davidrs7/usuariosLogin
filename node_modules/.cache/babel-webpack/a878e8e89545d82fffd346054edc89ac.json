{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PostulateService = /*#__PURE__*/(() => {\n  class PostulateService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.apiUrl + 'Postulate/';\n    }\n\n    stringValue(value) {\n      return value != null && value != undefined ? value.toString() : null;\n    }\n\n    getPostulateFormDataCriteria(postulateCriteria) {\n      var formData = new FormData();\n      formData.append(\"vacantId\", this.stringValue(postulateCriteria.vacantId));\n      formData.append(\"name\", this.stringValue(postulateCriteria.name));\n      formData.append(\"doc\", this.stringValue(postulateCriteria.doc));\n      formData.append(\"page\", this.stringValue(postulateCriteria.page));\n      formData.append(\"activePaginator\", postulateCriteria.activePaginator ? 'true' : 'false');\n      return formData;\n    }\n\n    getPostulateFormData(postulate) {\n      var formData = new FormData();\n      formData.append(\"recruiterUserId\", this.stringValue(postulate.recruiterUserId));\n      formData.append(\"findOutId\", this.stringValue(postulate.findOutId));\n      formData.append(\"docTypeId\", this.stringValue(postulate.docTypeId));\n      formData.append(\"educationalLevelId\", this.stringValue(postulate.educationalLevelId));\n      formData.append(\"offeredSalary\", this.stringValue(postulate.offeredSalary));\n      formData.append(\"expectedSalary\", this.stringValue(postulate.expectedSalary));\n      formData.append(\"doc\", this.stringValue(postulate.doc));\n      formData.append(\"firstName\", this.stringValue(postulate.firstName));\n      formData.append(\"lastName\", this.stringValue(postulate.lastName));\n      formData.append(\"sex\", this.stringValue(postulate.sex));\n      formData.append(\"birthDate\", this.stringValue(postulate.birthDate));\n      formData.append(\"rh\", this.stringValue(postulate.rh));\n      formData.append(\"cellPhone\", this.stringValue(postulate.cellPhone));\n      formData.append(\"phone\", this.stringValue(postulate.phone));\n      formData.append(\"email\", this.stringValue(postulate.email));\n      formData.append(\"career\", this.stringValue(postulate.career));\n      formData.append(\"description\", this.stringValue(postulate.description));\n\n      if (postulate.photo != null) {\n        const fileToUpload = postulate.photo;\n        formData.append(\"photo\", fileToUpload, postulate.doc);\n      }\n\n      return formData;\n    }\n\n    postulateAllEndpoint() {\n      return this.http.get(this.baseUrl + 'Postulates');\n    }\n\n    postulateListEndpoint(postulateCriteria) {\n      var formData = this.getPostulateFormDataCriteria(postulateCriteria);\n      return this.http.post(this.baseUrl + 'Postulates/Criteria', formData);\n    }\n\n    postulateByIdEndpoint(postulateId) {\n      return this.http.get(this.baseUrl + postulateId.toString());\n    }\n\n    editPostulateEndpoint(postulateEdit) {\n      var formData = this.getPostulateFormData(postulateEdit);\n      formData.append(\"id\", postulateEdit.id.toString());\n      return this.http.put(this.baseUrl + 'Edit', formData);\n    }\n\n    addPostulateEndpoint(postulateAdd) {\n      var formData = this.getPostulateFormData(postulateAdd);\n      return this.http.post(this.baseUrl + 'Add', formData);\n    }\n\n    postulateToEmployeeEndpoint(postulateId, vacantId, employeeId) {\n      var formData = new FormData();\n      formData.append(\"id\", postulateId.toString());\n      formData.append(\"vacantId\", vacantId.toString());\n      formData.append(\"employeeId\", employeeId.toString());\n      return this.http.put(this.baseUrl + 'ToEmployee', formData);\n    }\n\n  }\n\n  PostulateService.ɵfac = function PostulateService_Factory(t) {\n    return new (t || PostulateService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PostulateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostulateService,\n    factory: PostulateService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostulateService;\n})();","map":null,"metadata":{},"sourceType":"module"}